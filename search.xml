<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo Butterfly主题相关配置</title>
      <link href="/2024/04/25/Hexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/04/25/Hexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Butterfly主题相关配置"><a href="#Hexo-Butterfly主题相关配置" class="headerlink" title="Hexo Butterfly主题相关配置"></a>Hexo Butterfly主题相关配置</h1><p>关于部署Hexo的主题butterfly后，一些相关的配置</p><p>其实关于hexo主题的基础网上都挺详细</p><p>准备：将 <em>butterfly&#x2F;_config.yml</em> 文件复制，重命名为 <em>_config.butterfly.yml</em> 放在hexo根目录下，在这个文件里做修改。</p><hr><h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><h2 id="首页导航栏"><a href="#首页导航栏" class="headerlink" title="首页导航栏"></a>首页导航栏</h2><p>在 <em>_config.butterfly.yml</em> 下找到 menu ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">   首页: / || fas fa-home</span><br><span class="line">   归档: /archives/ || fas fa-archive</span><br><span class="line">   标签: /tags/ || fas fa-tags</span><br><span class="line">   分类: /categories/ || fas fa-folder-open</span><br><span class="line">   #菜单||fas fa-list:</span><br><span class="line">     #音乐: /music/ || fas fa-music</span><br><span class="line">     #电影: /movies/ || fas fa-video</span><br><span class="line">   友链: /link/ || fas fa-link</span><br><span class="line">   #关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>可在自己不需要的项目前加 # 来使其不出现在导航栏中。</p><p><img src="/2024/04/25/Hexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/%5CHexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%5Cp1.png"></p><h2 id="首页的副标题"><a href="#首页的副标题" class="headerlink" title="首页的副标题"></a>首页的副标题</h2><p>在 <em>_config.butterfly.yml</em> 下找到 subtitle ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: false</span><br><span class="line">  # loop (循环打字)</span><br><span class="line">  loop: false</span><br><span class="line">  # source 调用第三方服務</span><br><span class="line">  # source: false 关闭调用</span><br><span class="line">  # source: 1  调用一言网的一句話（简体） https://hitokoto.cn/</span><br><span class="line">  # source: 2  调用一句网（简体） http://yijuzhan.com/</span><br><span class="line">  # source: 3  调用今日詩詞（简体） https://www.jinrishici.com/</span><br><span class="line">  # subtitle 会先显示 source , 再显示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果关闭打字效果，subtitle 只会显示 sub 的第一行文字</span><br><span class="line">  sub:</span><br><span class="line">    - 多看书，多看报；少玩电脑，多睡觉</span><br></pre></td></tr></table></figure><p>我把打字效果和循环效果都关了，在sub后添加自己的副标题，注意要加 - 且 - 后面要有空格，否则只能显示一个字。当然也可添加多个内容，但好像要打开打字效果，效果见封面。</p><h2 id="首页图片"><a href="#首页图片" class="headerlink" title="首页图片"></a>首页图片</h2><p>在 <em>_config.butterfly.yml</em> 下找到 index_img ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># The banner image of home page</span><br><span class="line">index_img: /img/img.jpg</span><br></pre></td></tr></table></figure><p>在主题文件夹 <em>&#x2F;source&#x2F;img</em> 文件夹下添加 img.jpg</p><p>文件夹里还有头像、网页图标等文件，都可更改（网页图标更改部署后一直无法成功，具体原因也不是很清楚···）</p><p>图片最好不要太大，不然可能导致加载太慢，可以用以下网站进行压缩<br><a href="https://link.zhihu.com/?target=http://niaoapi.com/">http://niaoapi.com/</a></p><p>可在 <em>_config.butterfly.yml</em> 里打开 加载动画 ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Loading Animation (加载动画)</span><br><span class="line">preloader: true</span><br></pre></td></tr></table></figure><p>缓解载入时间太久的尴尬。</p><p>设置主页图片显示大小：</p><p>在 <em>_config.butterfly.yml</em> 下找到 index_top_img_height ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># The position of site info, eg: 300px/300em/300rem/10% (主页标题距离顶部距离)</span><br><span class="line">index_site_info_top:</span><br><span class="line"># The height of top_img, eg: 300px/300em/300rem (主页top_img高度)</span><br><span class="line">index_top_img_height: </span><br></pre></td></tr></table></figure><p>在 index_top_img_height ：后面加上300px、400px都可，不加就是默认全屏显示。</p><h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h2><h2 id="侧边栏-1"><a href="#侧边栏-1" class="headerlink" title="侧边栏"></a>侧边栏</h2><p>在 <em>_config.butterfly.yml</em> 下找到 aside ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  hide: false</span><br><span class="line">  button: true</span><br><span class="line">  mobile: true     # display on mobile</span><br><span class="line">  position: left   # left or right，决定侧边栏在右边还是在左边</span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br><span class="line">    description:</span><br><span class="line">    button:</span><br><span class="line">      enable: true</span><br><span class="line">      icon: fab fa-github</span><br><span class="line">      text: github</span><br><span class="line">      link: https://github.com/username</span><br><span class="line">  card_announcement:        #公告</span><br><span class="line">    enable: false</span><br><span class="line">    content: 问题不大</span><br></pre></td></tr></table></figure><p>后面一堆代码我就不列了，不需要的按钮可以用 false 关闭，在card_author的link后面写上自己主页的链接</p><h2 id="社交按钮"><a href="#社交按钮" class="headerlink" title="社交按钮"></a>社交按钮</h2><p>在 <em>_config.butterfly.yml</em> 下找到 social ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># social settings (社交图标设置)</span><br><span class="line"># formal:</span><br><span class="line">#   icon: link || the description</span><br><span class="line">social:</span><br><span class="line">   #fab fa-github: https://github.com/xxx || Github</span><br><span class="line">   fas fa-envelope: mailto:xxx@example.com || Email</span><br></pre></td></tr></table></figure><p>想要更多图标可在<a href="https://link.zhihu.com/?target=https://fontawesome.com/icons?from=io">font-awesome v6</a>中查找<br>找到后可查看其代码，如 QQ ：<br><code>&lt;i class=&quot;fa-brands fa-qq&quot;&gt;&lt;/i&gt;</code><br>可提取为 <code>fab fa-qq</code> 带入 socical 中：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">   #fab fa-github: https://github.com/xxx || Github</span><br><span class="line">   fas fa-envelope: mailto:xxx@example.com || Email</span><br><span class="line">   fab fa-qq: http://wpa.qq.com/msgrd?v=3&amp;uin=你自己的QQ号&amp;site=qq&amp;menu=yes || QQ</span><br></pre></td></tr></table></figure><p>注意 ‘||’ 及后面的说明不能缺少。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><h2 id="纯色背景"><a href="#纯色背景" class="headerlink" title="纯色背景"></a>纯色背景</h2><p>在 <em>_config.butterfly.yml</em> 下找到 theme_color ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">theme_color:</span><br><span class="line">  enable: true</span><br><span class="line">  main: &quot;#49B1F5&quot;</span><br><span class="line">  paginator: &quot;#00c4b6&quot;</span><br><span class="line">  button_hover: &quot;#FF7242&quot;</span><br><span class="line">  text_selection: &quot;#00c4b6&quot;</span><br><span class="line">  link_color: &quot;#99a9bf&quot;</span><br><span class="line">  meta_color: &quot;#858585&quot;</span><br><span class="line">  hr_color: &quot;#A4D8FA&quot;</span><br><span class="line">  code_foreground: &quot;#F47466&quot;</span><br><span class="line">  code_background: &quot;rgba(27, 31, 35, .05)&quot;</span><br><span class="line">  toc_color: &quot;#00c4b6&quot;</span><br><span class="line">  blockquote_padding_color: &quot;#49b1f5&quot;</span><br><span class="line">  blockquote_background_color: &quot;#49b1f5&quot;</span><br><span class="line">  scrollbar_color: &quot;#49b1f5&quot;</span><br></pre></td></tr></table></figure><p>可自行更换主题中上述元素的颜色。</p><h2 id="彩带背景"><a href="#彩带背景" class="headerlink" title="彩带背景"></a>彩带背景</h2><p>在 <em>_config.butterfly.yml</em> 下找到 canvas_ribbon ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># canvas_ribbon (静止彩带背景)</span><br><span class="line"># See: https://github.com/hustcc/ribbon.js</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 150</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line">  click_to_change: true   #点击鼠标更换彩带</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure><p>后面还有动态彩带背景和canvas_nest（我也不知道是什么，有兴趣的可以试试看）</p><h2 id="图片背景"><a href="#图片背景" class="headerlink" title="图片背景"></a>图片背景</h2><p>将自己喜欢的图片放入 <em>theme&#x2F;butterfly&#x2F;source&#x2F;img</em> 中</p><p>在 <em>_config.butterfly.yml</em> 下找到 background ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: url(/blog/img/bg.jpg)</span><br></pre></td></tr></table></figure><p>按上述代码写好即可</p><h2 id="自定义渐变背景"><a href="#自定义渐变背景" class="headerlink" title="自定义渐变背景"></a>自定义渐变背景</h2><p>需要在 <em>theme&#x2F;butterfly&#x2F;source&#x2F;css</em> 中新建一个 css 文件，文件名自取</p><p>之后在 <em>_config.butterfly.yml</em> 下找到 inject ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Inject</span><br><span class="line"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/mycss.css&quot;&gt;</span><br><span class="line">    # - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在 head 中插入 <code>- &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/mycss.css&quot;&gt;</code></p><p>关闭 js 动态背景</p><p>原本 background 处改成：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: &quot;#efefef&quot;</span><br></pre></td></tr></table></figure><p>打开css文件，复制代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* 背景渐变 */</span><br><span class="line">#web_bg&#123;</span><br><span class="line">    /*紫粉渐变*/</span><br><span class="line">    /*background-image: linear-gradient(120deg, #e0c3fc 0%, #8ec5fc 100%);*/</span><br><span class="line">    /*粉白蓝*/</span><br><span class="line">    background-image: linear-gradient(-225deg, #dfbacd 0%, #B8DCFF 48%, #58abf3 100%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可自行更改配置，不需要的代码用&#x2F;* *&#x2F;注释， css 代码可在<a href="https://link.zhihu.com/?target=https://webgradients.com/">这里</a>得到，选择喜欢的渐变颜色，点击右下角 copy css 复制 css 代码即可。<br>效果如下：</p><p><img src="/2024/04/25/Hexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/%5CHexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%5Cp2.jpg"></p><h2 id="页脚"><a href="#页脚" class="headerlink" title="页脚"></a>页脚</h2><p>默认页脚为主题色。可在 <em>_config.butterfly.yml</em> 下找到 footer ，</p><p>其中包含页脚设置：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Footer Settings</span><br><span class="line"># --------------------------------------</span><br><span class="line">footer:</span><br><span class="line">  owner:</span><br><span class="line">    enable: true</span><br><span class="line">    since: 2022</span><br><span class="line">  custom_text:</span><br><span class="line">  copyright: true # Copyright of theme and framework</span><br></pre></td></tr></table></figure><p>可以配置页脚显示的内容；</p><p>还有页脚背景：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Footer Background</span><br><span class="line">footer_bg: false</span><br></pre></td></tr></table></figure><p>打开后页脚图片将与主页图片（index_img）底部一致；</p><p>也可进行自定义渐变页脚：</p><p>在原本配置渐变背景的 css 文件下复制代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/* 页脚footer */</span><br><span class="line">#footer &#123;</span><br><span class="line">    /* 与背景渐变效果一致*/</span><br><span class="line">    background-image: linear-gradient(-225deg, #d6badf 0%, #B8DCFF 28%, #58abf3 100%);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#footer:before &#123;</span><br><span class="line">    background-color: rgba(0, 0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="/2024/04/25/Hexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/myblog\source_posts\Hexo-Butterfly主题相关配置\p3.png"></p><p>同上，渐变效果可以自己配置。</p><p>css 、js 还能配置许多效果，网上许多博主也有发布魔改教程，感兴趣的可以自行查找，这里不过多赘述。</p><h2 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h2><h2 id="文章的封面"><a href="#文章的封面" class="headerlink" title="文章的封面"></a>文章的封面</h2><p>每篇文章都可以设置自己的封面，或者统一使用一个封面，这些都可以在 <em>_config.butterfly.yml</em> 下找到；</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cover:</span><br><span class="line">  # display the cover or not (是否显示文章封面)</span><br><span class="line">  index_enable: false</span><br><span class="line">  aside_enable: false</span><br><span class="line">  archives_enable: false</span><br><span class="line">  # the position of cover in home page (封面显示的位置)</span><br><span class="line">  # left/right/both</span><br><span class="line">  position: both</span><br><span class="line">  # When cover is not set, the default cover is displayed (当没有设置cover时，默认的封面显示)</span><br><span class="line">  default_cover:</span><br><span class="line">    # - https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg</span><br></pre></td></tr></table></figure><p>建议没有文章封面时，将上述几个开关（ <code>index_enable</code> <code>aside_enable</code> <code>archives_enable</code>）都关掉，否则主页的格式会显得奇丑无比：</p><p><img src="/2024/04/25/Hexo-Butterfly%E4%B8%BB%E9%A2%98%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/myblog\source_posts\Hexo-Butterfly主题相关配置\p4.jpg"></p><h2 id="文章基本设置"><a href="#文章基本设置" class="headerlink" title="文章基本设置"></a>文章基本设置</h2><p>在 <em>_config.butterfly.yml</em> 下找到 post_meta :</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  page: # Home Page</span><br><span class="line">    date_type: created # created or updated or both 主页文章日期是创建日或者更新日或都显示</span><br><span class="line">    date_format: date # date/relative 显示日期还是相对日期</span><br><span class="line">    categories: true # true or false 主页是否显示分类</span><br><span class="line">    tags: false # true or false 主页是否显示标签</span><br><span class="line">    label: true # true or false 显示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章页日期是创建日或者更新日或都显示</span><br><span class="line">    date_format: date # date/relative 显示日期还是相对日期</span><br><span class="line">    categories: true # true or false 文章页是否显示分类</span><br><span class="line">    tags: true # true or false 文章页是否显示标签</span><br><span class="line">    label: true # true or false 显示描述性文字</span><br></pre></td></tr></table></figure><p>主页文章显示高度，显示篇数：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index_post_content:</span><br><span class="line">  method: 3</span><br><span class="line">  length: 500 # if you set method to 2 or 3, the length need to config</span><br></pre></td></tr></table></figure><p>这里我多开了一个字数统计，也是在 <em>_config.butterfly.yml</em> 里的</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># wordcount (字数统计)</span><br><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br></pre></td></tr></table></figure><p>文章页效果如下 ：</p><p>因为是复制过来的，一些图片和链接可能会失效</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java概述与环境搭建</title>
      <link href="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E6%A0%87%E9%A2%98.PNG"></p><blockquote><p>Author：Cindy</p><p>Version：9.0.2</p></blockquote><p>[TOC]</p><blockquote><p> 在Java中，负责对字节码解释执行的是虚拟机。 </p></blockquote><ul><li><blockquote><p>JDK包括JRE，JRE包括JVM</p></blockquote></li></ul><blockquote><p>为什么会中文乱码 另存为&gt;&gt;编码&gt;&gt;ANSI不会中文乱码&amp;&amp;UTF-8会中文乱码</p></blockquote><blockquote><p>Scanner sc &#x3D; new Scanner(<a href="http://system.in/">System.in</a>);&#x2F;&#x2F;控制台输入</p></blockquote><blockquote><p>整型：int num &#x3D;sc.nextInt();</p><p>字符：char ch &#x3D; sc.next().charAt(0);</p><p>字符串：String str &#x3D; sc.next();</p></blockquote><p><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/.%5CPictures%5Cclipboard.png" alt="img"></p><h1 id><a href="#" class="headerlink" title="********************************************************************************************************************"></a>********************************************************************************************************************</h1><h3 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h3><hr><h4 id="1-1-什么是程序"><a href="#1-1-什么是程序" class="headerlink" title="1.1 什么是程序"></a>1.1 什么是程序</h4><blockquote><p>程序是为了模拟现实世界，解决现实问题而使用计算机语言编写的一系列有序的指令集合。</p></blockquote><h3 id="二、Java的历史与特点"><a href="#二、Java的历史与特点" class="headerlink" title="二、Java的历史与特点"></a>二、Java的历史与特点</h3><hr><h4 id="2-1-Java的历史"><a href="#2-1-Java的历史" class="headerlink" title="2.1 Java的历史"></a>2.1 Java的历史</h4><blockquote><p>Sun Microsystems于1995年推出的面向对象的程序设计语言，共同创始人的詹姆斯·高斯林 (James Gosling)被誉为“Java之父”。</p><ul><li>1996年发布JDK 1.0</li><li>1998年发布JDK 1.2 </li><li>平台名称：J2SE(Stadard Edition)、J2EE(Enterprise Edition)、J2ME(Micro Edition)</li><li>2004年发布JDK 1.5 版本更名：Java 5.0</li><li>平台名称：Java SE、Java EE、Java ME</li><li>2006年发布Java 6.0</li><li>2009年被Oracle收购    —— 注释Oracle：甲骨文 </li><li>2011年由Oracle发布Java 7.0</li><li>2014年由Oracle发布Java 8.0</li><li>2017年由Oracle发布Java 9.0</li><li>2019年由Oracle发布Java 14.0</li></ul></blockquote><h4 id="2-2-Java的语言特点"><a href="#2-2-Java的语言特点" class="headerlink" title="2.2 Java的语言特点"></a>2.2 Java的语言特点</h4><blockquote><ul><li>面向对象（贴近人类思维模式，模拟现实世界，解决现实问题）。</li><li>简单性（自动内存管理机制、不易造成内存溢出；简化流程处理、语义清晰）</li><li>跨平台（操作系统、服务器等）。</li></ul></blockquote><h3 id="三、Java的运行机制【重点】"><a href="#三、Java的运行机制【重点】" class="headerlink" title="三、Java的运行机制【重点】"></a>三、Java的运行机制【<code>重点</code>】</h3><hr><h4 id="3-1-计算机的执行机制"><a href="#3-1-计算机的执行机制" class="headerlink" title="3.1 计算机的执行机制"></a>3.1 计算机的执行机制</h4><h5 id="3-1-1-编译执行"><a href="#3-1-1-编译执行" class="headerlink" title="3.1.1 编译执行"></a>3.1.1 编译执行</h5><blockquote><ul><li>将源文件编译成平台相关的机器码文件，一次编译，多次执行。</li><li>执行效率高，不可跨平台。</li></ul></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6.PNG"></td></tr></tbody></table><h5 id="3-1-2-解释执行"><a href="#3-1-2-解释执行" class="headerlink" title="3.1.2 解释执行"></a>3.1.2 解释执行</h5><blockquote><ul><li>将源文件交给不同的平台独有的解释器。</li><li>执行效率低，可以跨平台</li></ul></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6%EF%BC%882%EF%BC%89.png"></td></tr></tbody></table><h4 id="3-2-Java的执行机制"><a href="#3-2-Java的执行机制" class="headerlink" title="3.2 Java的执行机制"></a>3.2 Java的执行机制</h4><blockquote><ul><li>先编译、再解释：<ul><li>将源文件编译成字节码文件（平台中立文件.class），再将字节码文件进行解释执行。</li><li>Java的设计理念：Write Once Run Anywhere。</li></ul></li></ul></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5CJava%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6.PNG"></td></tr></tbody></table><h4 id="3-3-名词解释"><a href="#3-3-名词解释" class="headerlink" title="3.3 名词解释"></a>3.3 名词解释</h4><blockquote><ul><li>JVM（Java Virtual Machine）虚拟机：使用软件在不同操作系统中，模拟相同的环境。</li><li>JRE（Java Runtime Environment）运行环境：包含JVM和解释器，完整的Java运行环境。</li><li>JDK（Java Development Kit）开发环境：包含JRE + 类库 + 开发工具包（编译器+调试工具）。</li></ul></blockquote><h3 id="四、配置环境变量"><a href="#四、配置环境变量" class="headerlink" title="四、配置环境变量"></a>四、配置环境变量</h3><hr><h4 id="4-1-配置环境变量"><a href="#4-1-配置环境变量" class="headerlink" title="4.1 配置环境变量"></a>4.1 配置环境变量</h4><blockquote><p>“我的电脑”（“此电脑”） -&gt; 右键点击“属性” -&gt; “高级系统设置”。</p></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.PNG"></td></tr></tbody></table><h4 id="4-2-DOS命令操作"><a href="#4-2-DOS命令操作" class="headerlink" title="4.2 DOS命令操作"></a>4.2 DOS命令操作</h4><blockquote><ul><li><p>Windows键 + R 快捷呼出运行窗口。</p></li><li><p>再输入cmd并回车打开DOS命令窗口。</p></li></ul></blockquote><table><thead><tr><th align="center"></th></tr></thead><tbody><tr><td align="center"><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5CDOS%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C.PNG"></td></tr></tbody></table><blockquote><p>常用DOS命令：</p><ul><li>更换盘符： d:</li><li>查看当前目录下的文件及文件夹：dir</li><li>进入文件夹： cd 文件夹的名字</li><li>返回上一级目录：cd ..</li><li>清空屏幕：cls</li><li>删除文件：del  文件名</li><li>删除文件夹：rd  文件夹名称</li><li>退出： exit</li></ul></blockquote><h3 id="五、第一个应用程序【重点】"><a href="#五、第一个应用程序【重点】" class="headerlink" title="五、第一个应用程序【重点】"></a>五、第一个应用程序【<code>重点</code>】</h3><hr><h4 id="5-1-第一个Java应用程序"><a href="#5-1-第一个Java应用程序" class="headerlink" title="5.1 第一个Java应用程序"></a>5.1 第一个Java应用程序</h4><blockquote><p>创建以 .java 结尾的源文件：</p></blockquote><table><thead><tr><th align="center"></th></tr></thead><tbody><tr><td align="center"><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C1.PNG"></td></tr></tbody></table><blockquote><p>编写第一个程序：</p></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.PNG"></td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;Hello Everyone&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-编译与运行"><a href="#5-2-编译与运行" class="headerlink" title="5.2 编译与运行"></a>5.2 编译与运行</h4><blockquote><p>编译：javac 源文件名称 .java</p></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E7%BC%96%E8%AF%91.png"></td></tr></tbody></table><blockquote><p>运行：java 类名</p></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E8%BF%90%E8%A1%8C.png"></td></tr></tbody></table><h4 id="5-3-类的阐述"><a href="#5-3-类的阐述" class="headerlink" title="5.3 类的阐述"></a>5.3 类的阐述</h4><blockquote><ul><li>同一个源文件中可以定义多个类。</li><li>编译后，每个类都会生成独立的 .class文件。</li><li>一个类中，只能有一个主方法，每个类都可以有自己的主方法。</li><li>public修饰的类称为公开类，要求类名必须与文件名称完全相同，包括大小写。</li><li>一个源文件中，只能有一个公开类。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;Hello Everyone&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodByeWorld</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;GoodBye&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-4-Package（包）"><a href="#5-4-Package（包）" class="headerlink" title="5.4 Package（包）"></a>5.4 Package（包）</h4><blockquote><ul><li>作用：类似于文件夹，用于管理字节码（.class）文件。</li><li>语法：package 包名。</li><li>位置：必须写在源文件的第一行。</li><li>带包编译：javac -d . 源文件名称.java （自动生成目录结构）。</li><li>带包运行：java 包名.类名 （包名+类名又称全限定名）。</li><li>采用域名倒置的规则：<a href="http://www.baidu.com.cn/">www.baidu.com.cn</a>  -&gt; cn.com.baidu.xxx。</li><li>例如：cn.com.company.department.group.project. module.XxxClass。</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qf.bj.class1.basic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;Hello Everyone&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="六、Java的语言规范"><a href="#六、Java的语言规范" class="headerlink" title="六、Java的语言规范"></a>六、Java的语言规范</h3><hr><h4 id="6-1-编码规范（1）书写格式"><a href="#6-1-编码规范（1）书写格式" class="headerlink" title="6.1 编码规范（1）书写格式"></a>6.1 编码规范（1）书写格式</h4><blockquote><ul><li>层级之间必须缩进（Tab：一个制表位）。</li><li>一行只写一句代码。</li></ul></blockquote><table><thead><tr><th></th></tr></thead><tbody><tr><td><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Pictures%5C%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83.png"></td></tr></tbody></table><h4 id="6-2-编码规范（2）代码注释"><a href="#6-2-编码规范（2）代码注释" class="headerlink" title="6.2 编码规范（2）代码注释"></a>6.2 编码规范（2）代码注释</h4><blockquote><p>单行注释：</p></blockquote><table><thead><tr><th align="center"></th></tr></thead><tbody><tr><td align="center"><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/单行.png" style="zoom: 50%;"></td></tr></tbody></table><blockquote><p>多行注释：</p></blockquote><table><thead><tr><th align="center"></th></tr></thead><tbody><tr><td align="center"><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/多行.png" style="zoom:50%;"></td></tr></tbody></table><blockquote><p>文档注释：（生成外部文档：javadoc -d . HelloWorld.java）</p></blockquote><table><thead><tr><th align="center"></th></tr></thead><tbody><tr><td align="center"><img src="/2024/04/25/Java%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/文档.png" style="zoom:50%;"></td></tr></tbody></table><blockquote><p>注：注释不参与编译。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qf.chapter1.demo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">文档注释 </span></span><br><span class="line"><span class="comment">这个类旨在介绍Java中的注释方式有哪些</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestAnnotation</span>&#123;<span class="comment">//HelloWorld（帕斯卡） helloWorld（驼峰）  HELLO_WORLD      GetElementById             //getElementById     GET_ELEMENT_BY_ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">这个方法代表程序的入口，即为书写逻辑代码的位置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下代码代表控制台输出一句文本</span></span><br><span class="line">System.out.print(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">/* </span></span><br><span class="line"><span class="comment"> 多行注释的开始</span></span><br><span class="line"><span class="comment"> .....</span></span><br><span class="line"><span class="comment"> .....</span></span><br><span class="line"><span class="comment"> .....</span></span><br><span class="line"><span class="comment"> 多行注释的结束</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">System.out.print(<span class="string">&quot;Hello Everyone&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-3-编码规范（3）标识符命名"><a href="#6-3-编码规范（3）标识符命名" class="headerlink" title="6.3 编码规范（3）标识符命名"></a>6.3 编码规范（3）标识符命名</h4><blockquote><ul><li>语法规定：<ul><li>可以由：字母、数字、_、$ 组成，但不能以数字开头。</li><li>不能与关键字、保留字重名。</li></ul></li></ul></blockquote><blockquote><ul><li>约定俗成：<ul><li>望文生义、见名知义。</li><li>类名由一个或多个单词组成，每个单词首字母大写（pascal）。</li><li>函数名、变量名由一个或多个单词组成，首单词首字母小写，拼接词首字母大写（camel）。</li><li>包名全小写，只可以使用特殊字符“.”，并且不以“.”开头或结尾。</li><li>常量全大写，多个单词用 _ 连接。</li></ul></li></ul></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>消息队列中间件</title>
      <link href="/2024/04/02/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
      <url>/2024/04/02/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h4 id="没有最好的消息队列中间件，只有最合适的消息中间件，以上五款都是最近炙手可热的消息队列中间件："><a href="#没有最好的消息队列中间件，只有最合适的消息中间件，以上五款都是最近炙手可热的消息队列中间件：" class="headerlink" title="没有最好的消息队列中间件，只有最合适的消息中间件，以上五款都是最近炙手可热的消息队列中间件："></a>没有最好的消息队列中间件，只有最合适的消息中间件，以上五款都是最近炙手可热的消息队列中间件：</h4><p>消息队列中间件是分布式系统中重要的组件，主要解决应用耦合、异步消息、流量削锋等问题。它可以实现高性能、高可用、可伸缩和最终一致性架构，是大型分布式系统不可缺少的中间件。</p><p>以下是对目前主流的消息中间件的比较。</p><p>没有最好的消息队列中间件，只有最合适的消息中间件，以上五款都是最近炙手可热的消息队列中间件：</p><p>1）ActiveMQ由Apache出品，但是由于原因包袱太重，目前市场份额不高，并且目前维护和版本迭代较少，社区活跃度不高，因此不建议使用。</p><p>2）RabbitMQ健壮、稳定、易用、跨平台、支持多种语言、文档齐全、可靠性高，但是由于是使用Erlang开发，不利于公司后台人员阅读源码进行深入学习。因此也不建议使用。</p><p>3）Kafka在大数据领域的实时计算、日志采集等场景是业内的标准，并且社区活跃度高，是目前公司使用比较多的消息队列中间件，但是Kafka单机超过64个分区，Load会发生明显的飙高现象，队列越多，load越高，发送消息响应时间变长。</p><p>4）Pulsar源自Yahoo，于2016年开源并捐献给Apache基金会，并在2018年9月升级成为Apache顶级项目，计算和存储分离是其一大特色，但是目前使用的公司不多。</p><p>5）RocketMQ出自阿里公司的开源产品，用 Java 语言实现，便于我们阅读源码，深入学习；在设计时参考了 Kafka，并做出了自己的一些改进，消息可靠性上比 Kafka 更好。并且在阿里集团被广泛应用在订单，交易，充值，流计算，消息推送，日志流式处理，binglog分发等场景；功能丰富，支持消息根据tag过滤，延迟消息，事务消息，消息重试，死信队列，并且可以根据时间或者offset进行消息回溯。</p><p>基于以上比较，本次消息队列中间件技术选型会选择使用RocketMQ，来代替公司后台项目中原来的CMQ和Kafka，作为消息队列中间件的优先选择。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/01/hello-world/"/>
      <url>/2024/04/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安装文档</title>
      <link href="/2023/04/27/Butterfly-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/"/>
      <url>/2023/04/27/Butterfly-%E5%AE%89%E8%A3%85%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
